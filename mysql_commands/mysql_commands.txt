MYSQL commands

Connecting to MySQL
- mysql -u "username" -p  (to log in as that user, and prompt for the password or)
- mysql -uadmin -p`cat /etc/psa/.psa.shadow`  (to log in to plesk protected db)
- plesk db  (for not protected mysql instance on plesk panel server)
Remote connection
- mysql -uroot -p -h localhost  (If connection is only allowed from localhost)
- mysql -uroot -p -h 192.168.2.12  (to connect to a remote host)

In mysql end every command with ";". Also in most documentation, the commands are written all capital, however this is not a must.

Databases and tables
- show databases;  (to show existing databases)
- use "dbname";  (to switch to that database)
- select database();  (to know which one is active)
- create database "dbname";  (to create the dbname database)
- show tables;  (to see tables in the active db)
- describe "tablename"  (to see the table data structure, doesnt show records!)
- select * from "tablename"  (to see all records in all fields)

- create table "pet" (name varchar(20)m, owner varchar(20), sex char(1), birth date);  (to create the table "pet" with that structure, birt only accepts date format) 
- load data local infile '/path/to/file' into table "tablename";  (the file's records needs to be separated with tab, and need to follow the structure of the table)
(\N for entering null into a field, this only works, when loaded from a file)
- insert into "pet" values ('stuffy', ... NULL);  (to insert data manually, use null for missing info)

Users
- select user, host from mysql.user;  (to show all existing users and their host information)
- show grants for 'username'@'host'  (to see "username"'s rights)

- create user 'Feri'@'localhost' identified by 'password for Feri'  (to create a user and specify its password)
- grant all privileges on *.*  (to grant admin privileges to it)
- drop user 'Feri'@'localhost';  (to erase that user)

MySQL dump
- mysqldump -uadmin -p --all-databases >> dump.sql  (simple version)
- mysqldump -uadmin -p --all-databases --events --triggers --routines > all_db.sql  (dump everything, recommended way)
Database dump for plesk
- mysqldump -uadmin -p`cat /etc/psa/.psa.shadow` psa > psa_bak.sql
MySQL dump of every database individually
- mysql -N -e 'show databases' | while read dbname; do mysqldump --complete-insert --routines --triggers --single-transaction "$dbname" > "$dbname".sql; done 
- mysql -N -e 'show databases' | while read dbname; do mysqldump --complete-insert --routines --triggers --single-transaction "$dbname" > "$dbname".sql; [[ $? -eq 0 ]] && gzip "$dbname".sql; done  (to gzip it on the fly)

MySQL import
- mysql -u username -p database_name < file.sql
Import all DBs from individual DB dumps
- for sql in *.sql; do dbname=${sql/\.sql/}; echo -n "Now importing $dbname ... "; mysql $dbname < $sql; echo " done."; done  (will import all DBs and overwrite existing DB!)

Watching mysql processes
- watch -n0.5 'mysql -uadmin -p`cat /etc/psa/.psa.shadow` -e "show full processlist;"' (plesk edition)
- watch -n0.5 'mysql -e "show full processlist;"' (generic)
- watch -n1 "mysqladmin proc status"

mysqltuner
- wget -O mysqltuner.pl mysqltuner.pl
- perl mysqltuner.pl

Determining db engines:
innodb/myisam
mysql -e "SELECT TABLE_SCHEMA as DbName ,TABLE_NAME as TableName ,ENGINE as Engine FROM information_schema.TABLES WHERE ENGINE='MyISAM' AND TABLE_SCHEMA NOT IN('mysql','information_schema','performance_schema');"

etc
mysqlcheck --repair --all-databases
mysqlcheck <dbname> <tblname>  (to check specific table)
mysqlcheck <dbname> <tblname> -r  (to attempt to fix a specific table)

Saving the root password in a file for easier access:
- for the desired user (very likely to be root) create the file ~/.my.cnf
- chmod 400 ~/.my.cnf
	[client]
	user=root
	password="pass"
 
=== MySQL log operation ===

Always flush the logs after doing some operation on them
mysqladmin flush-logs 

mysqlbinlog --start-datetime="2019-11-07 01:08:00" bin.log* --stop-datetime="2019-11-17 01:00:00" >> /restore_/example.sql  (proper way of replaying MySQL binary logs into another sql file)
